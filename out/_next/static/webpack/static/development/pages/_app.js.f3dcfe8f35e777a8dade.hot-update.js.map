{"version":3,"file":"static/webpack/static/development/pages/_app.js.f3dcfe8f35e777a8dade.hot-update.js","sources":["webpack:///./src/ui/Header.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"./Link\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\n\nfunction ElevationScroll(props) {\n  const { children } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0\n  });\n}\n\nconst useStyles = makeStyles(theme => ({\n  toolbarMargin: {\n    ...theme.mixins.toolbar,\n    marginBottom: \"3em\",\n    [theme.breakpoints.down(\"md\")]: {\n      marginBottom: \"2em\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      marginBottom: \"1.25em\"\n    }\n  },\n  logo: {\n    height: \"8em\",\n    textTransform: \"none\",\n    [theme.breakpoints.down(\"md\")]: {\n      height: \"7em\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"5.5em\"\n    }\n  },\n  logoContainer: {\n    padding: 0,\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  },\n  tabContainer: {\n    marginLeft: \"auto\"\n  },\n  tab: {\n    ...theme.typography.tab,\n    minWidth: 10,\n    marginLeft: \"25px\"\n  },\n  button: {\n    ...theme.typography.estimate,\n    borderRadius: \"50px\",\n    marginLeft: \"50px\",\n    marginRight: \"25px\",\n    height: \"45px\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light\n    }\n  },\n  menu: {\n    backgroundColor: theme.palette.common.blue,\n    color: \"white\",\n    borderRadius: \"0px\"\n  },\n  menuItem: {\n    ...theme.typography.tab,\n    opacity: 0.7,\n    \"&:hover\": {\n      opacity: 1\n    }\n  },\n  drawerIcon: {\n    height: \"50px\",\n    width: \"50px\"\n  },\n  drawerIconContainer: {\n    marginLeft: \"auto\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  },\n  drawer: {\n    backgroundColor: theme.palette.common.blue\n  },\n  drawerItem: {\n    ...theme.typography.tab,\n    color: \"white\",\n    opacity: 0.7\n  },\n  drawerItemEstimate: {\n    backgroundColor: theme.palette.common.orange\n  },\n  drawerItemSelected: {\n    \"& .MuiListItemText-root\": {\n      opacity: 1\n    }\n  },\n  appbar: {\n    zIndex: theme.zIndex.modal + 1\n  }\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [openMenu, setOpenMenu] = useState(false);\n  const [previousURL, setPreviousURL] = useState(\"\");\n\n  const handleChange = (e, newValue) => {\n    props.setValue(newValue);\n  };\n\n  const handleClick = e => {\n    setAnchorEl(e.currentTarget);\n    setOpenMenu(true);\n  };\n\n  const handleMenuItemClick = (e, i) => {\n    setAnchorEl(null);\n    setOpenMenu(false);\n    props.setSelectedIndex(i);\n  };\n\n  const handleClose = e => {\n    setAnchorEl(null);\n    setOpenMenu(false);\n  };\n\n  const menuOptions = [\n    {\n      name: \"Custom Software Development\",\n      link: \"/customsoftware\",\n      activeIndex: 1,\n      selectedIndex: 0\n    },\n    {\n      name: \"iOS/Android App Development\",\n      link: \"/mobileapps\",\n      activeIndex: 1,\n      selectedIndex: 1\n    },\n    {\n      name: \"Website Development\",\n      link: \"/websites\",\n      activeIndex: 1,\n      selectedIndex: 2\n    }\n  ];\n\n  const routes = [\n    { name: \"Home\", link: \"/\", activeIndex: 0 },\n    {\n      name: \"Services\",\n      link: \"/services\",\n      activeIndex: 1,\n      ariaOwns: anchorEl ? \"simple-menu\" : undefined,\n      ariaPopup: anchorEl ? \"true\" : undefined,\n      mouseOver: event => handleClick(event)\n    },\n    { name: \"The Revolution\", link: \"/revolution\", activeIndex: 2 },\n    { name: \"About Us\", link: \"/about\", activeIndex: 3 },\n    { name: \"Contact Us\", link: \"/contact\", activeIndex: 4 }\n  ];\n\n  useEffect(() => {\n    if (window.location.pathname !== previousURL) {\n      ReactGA.pageview(window.location.pathname + window.location.search);\n      setPreviousURL(window.location.pathname);\n    }\n\n    [...menuOptions, ...routes].forEach(route => {\n      switch (window.location.pathname) {\n        case `${route.link}`:\n          if (props.value !== route.activeIndex) {\n            props.setValue(route.activeIndex);\n            if (\n              route.selectedIndex &&\n              route.selectedIndex !== props.selectedIndex\n            ) {\n              props.setSelectedIndex(route.selectedIndex);\n            }\n          }\n          break;\n        case \"/estimate\":\n          if (props.value !== false) {\n            props.setValue(false);\n          }\n          break;\n        default:\n          break;\n      }\n    });\n  }, [props.value, menuOptions, props.selectedIndex, routes, props]);\n\n  return (\n    <React.Fragment>\n      <ElevationScroll>\n        <AppBar position=\"fixed\" className={classes.appbar}>\n          <Toolbar disableGutters>\n            <Button\n              component={Link}\n              href=\"/\"\n              disableRipple\n              onClick={() => props.setValue(0)}\n              className={classes.logoContainer}\n            >\n              <style jsx global>{`\n                body {\n                  margin: 0;\n                }\n              `}</style>\n              <svg\n                className={classes.logo}\n                id=\"Layer_1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 480 139\"\n              >\n                <style>{`.st0{fill:none}.st1{fill:#fff}.st2{font-family:Raleway; font-weight: 300}.st6{fill:none;stroke:#000; stroke-width:3; stroke-miterlimit:10}`}</style>\n                <path d=\"M448.07-1l-9.62 17.24-8.36 14.96L369.93 139H-1V-1z\" />\n                <path className=\"st0\" d=\"M-1 139h479.92v.01H-1z\" />\n                <text\n                  transform=\"translate(261.994 65.233)\"\n                  className=\"st1 st2\"\n                  fontSize=\"57\"\n                >\n                  Arc\n                </text>\n                <text\n                  transform=\"translate(17.692 112.015)\"\n                  className=\"st1 st2\"\n                  fontSize=\"54\"\n                >\n                  Development\n                </text>\n                <path\n                  className=\"st0\"\n                  d=\"M382.44 116.43l47.65-85.23 8.36-14.96M369.83 139l-.01.01L362 153\"\n                />\n                <path\n                  d=\"M438.76 15.76l-56.42 100.91c-12.52-10.83-20.45-26.82-20.45-44.67 0-32.58 26.42-59 59-59 6.23 0 12.24.97 17.87 2.76z\"\n                  fill=\"#0b72b9\"\n                />\n                <path d=\"M479.89 72c0 32.58-26.42 59-59 59-14.73 0-28.21-5.4-38.55-14.33l56.42-100.91c23.85 7.57 41.13 29.89 41.13 56.24z\" />\n                <g id=\"Group_186\" transform=\"translate(30.153 11.413)\">\n                  <g id=\"Group_185\">\n                    <g id=\"Words\">\n                      <path\n                        id=\"Path_59\"\n                        className=\"st1\"\n                        d=\"M405.05 14.4l-.09 80.38-7.67-.01.06-52.25-29.4 52.21-7.94-.01 45.04-80.32z\"\n                      />\n                    </g>\n                  </g>\n                </g>\n                <path\n                  className=\"st0\"\n                  d=\"M457-17l-8.93 16-9.62 17.24-8.36 14.96L369.93 139l-.01.01L361 155\"\n                />\n              </svg>\n            </Button>\n            <Hidden mdDown>\n              <React.Fragment>\n                <Tabs\n                  value={props.value}\n                  onChange={handleChange}\n                  className={classes.tabContainer}\n                  indicatorColor=\"primary\"\n                >\n                  {routes.map((route, index) => (\n                    <Tab\n                      key={`${route}${index}`}\n                      className={classes.tab}\n                      component={Link}\n                      href={route.link}\n                      label={route.name}\n                      aria-owns={route.ariaOwns}\n                      aria-haspopup={route.ariaPopup}\n                      onMouseOver={route.mouseOver}\n                      onMouseLeave={() => setOpenMenu(false)}\n                    />\n                  ))}\n                </Tabs>\n                <Button\n                  component={Link}\n                  href=\"/estimate\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  className={classes.button}\n                  onClick={() => {\n                    props.setValue(false);\n                    ReactGA.event({\n                      category: \"Estimate\",\n                      action: \"Header Desktop Pressed\"\n                    });\n                  }}\n                >\n                  Free Estimate\n                </Button>\n                <Popper\n                  open={openMenu}\n                  classes={{ root: classes.menu }}\n                  anchorEl={anchorEl}\n                  role={undefined}\n                  transition\n                  disablePortal\n                  placement=\"bottom-start\"\n                >\n                  {({ TransitionProps, placement }) => (\n                    <Grow\n                      {...TransitionProps}\n                      style={{ transformOrigin: \"top left\" }}\n                    >\n                      <Paper elevation={0} style={{ zIndex: 1302 }}>\n                        <ClickAwayListener onClickAway={handleClose}>\n                          <MenuList\n                            disablePadding\n                            onMouseLeave={handleClose}\n                            onMouseOver={() => setOpenMenu(true)}\n                            id=\"menu-list-grow\"\n                          >\n                            {menuOptions.map((option, i) => (\n                              <MenuItem\n                                key={`${option}${i}`}\n                                component={Link}\n                                href={option.link}\n                                classes={{ root: classes.menuItem }}\n                                onClick={event => {\n                                  handleMenuItemClick(event, i);\n                                  props.setValue(1);\n                                  handleClose();\n                                }}\n                                selected={\n                                  i === props.selectedIndex &&\n                                  props.value === 1 &&\n                                  window.location.pathname !== \"/services\"\n                                }\n                              >\n                                {option.name}\n                              </MenuItem>\n                            ))}\n                          </MenuList>\n                        </ClickAwayListener>\n                      </Paper>\n                    </Grow>\n                  )}\n                </Popper>\n              </React.Fragment>\n            </Hidden>\n            <Hidden lgUp>\n              <React.Fragment>\n                <SwipeableDrawer\n                  disableBackdropTransition={!iOS}\n                  disableDiscovery={iOS}\n                  open={openDrawer}\n                  onClose={() => setOpenDrawer(false)}\n                  onOpen={() => setOpenDrawer(true)}\n                  classes={{ paper: classes.drawer }}\n                >\n                  <div className={classes.toolbarMargin} />\n                  <List disablePadding>\n                    {routes.map(route => (\n                      <ListItem\n                        divider\n                        key={`${route}${route.activeIndex}`}\n                        button\n                        component={Link}\n                        href={route.link}\n                        selected={props.value === route.activeIndex}\n                        classes={{ selected: classes.drawerItemSelected }}\n                        onClick={() => {\n                          setOpenDrawer(false);\n                          props.setValue(route.activeIndex);\n                        }}\n                      >\n                        <ListItemText\n                          className={classes.drawerItem}\n                          disableTypography\n                        >\n                          {route.name}\n                        </ListItemText>\n                      </ListItem>\n                    ))}\n                    <ListItem\n                      onClick={() => {\n                        setOpenDrawer(false);\n                        props.setValue(false);\n                        ReactGA.event({\n                          category: \"Estimate\",\n                          action: \"Header Mobile Pressed\"\n                        });\n                      }}\n                      divider\n                      button\n                      component={Link}\n                      classes={{\n                        root: classes.drawerItemEstimate,\n                        selected: classes.drawerItemSelected\n                      }}\n                      href=\"/estimate\"\n                      selected={props.value === 5}\n                    >\n                      <ListItemText\n                        className={classes.drawerItem}\n                        disableTypography\n                      >\n                        Free Estimate\n                      </ListItemText>\n                    </ListItem>\n                  </List>\n                </SwipeableDrawer>\n                <IconButton\n                  className={classes.drawerIconContainer}\n                  onClick={() => setOpenDrawer(!openDrawer)}\n                  disableRipple\n                >\n                  <MenuIcon className={classes.drawerIcon} />\n                </IconButton>\n              </React.Fragment>\n            </Hidden>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <div className={classes.toolbarMargin} />\n    </React.Fragment>\n  );\n}\n"],"mappings":"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","sourceRoot":""}